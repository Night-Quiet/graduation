package cn.java.controller;//import cn.java.bean.Comment;import cn.java.bean.User;import cn.java.service.QuestionService;import cn.java.service.UserService;import cn.java.utils.Validator;import org.omg.CORBA.Request;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.validation.BindingResult;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpSession;import javax.validation.Valid;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;@Controller@RequestMapping(value ="/user")public class UserController {    @Autowired    private UserService userservice;    @Autowired    private QuestionService questionService;    /**已完成**/    @RequestMapping(value ="/login.hml",method= RequestMethod.POST)    public String login(String username,String password, Long identify_select, Long class_select, HttpSession session) {        // 判断是否有这个用户        Map<String, Object> user = userservice.getUserByMulCondition(username, password, identify_select, class_select);        if(user != null){            // 页面设置用户信息            session.setAttribute("activeUser", user.get("username"));            session.setAttribute("activeUserId", user.get("id_user"));            session.setAttribute("activeClassId", user.get("id_class"));            session.setAttribute("activeIdentifyId", user.get("id_identify"));            if(class_select == 1){                session.setAttribute("activeClass", "计算机网络");            }else if(class_select == 2){                session.setAttribute("activeClass", "软件工程实践");            }else {                session.setAttribute("activeClass", "计算机组成与原理");            }            List<Map<String, Object>> allQuestion = questionService.getQuestionByClass(class_select);            session.setAttribute("allQuestion", allQuestion);            List<Map<String, Object>> allFunction = new ArrayList<>();            // 跳转至学生 | 老师页面            if(identify_select == 0){                session.setAttribute("activeIdentify", "学生");                Map<String, Object> map2 = new HashMap<>();                map2.put("href", "/question/toAsk.hml");                map2.put("message", "提问");                Map<String, Object> map3 = new HashMap<>();                map3.put("href", "/question/getMyQuestion.hml");                map3.put("message", "我的问题");                Map<String, Object> map4 = new HashMap<>();                map4.put("href", "/question/getClassQuestion.hml");                map4.put("message", "总问题");                allFunction.add(map2);                allFunction.add(map3);                allFunction.add(map4);            }else {                session.setAttribute("activeIdentify", "教师");                Map<String, Object> map2 = new HashMap<>();                map2.put("href", "/question/getNoAnswerQuestion.hml");                map2.put("message", "未回答");                Map<String, Object> map3 = new HashMap<>();                map3.put("href", "/question/getClassQuestion.hml");                map3.put("message", "总问题");                Map<String, Object> map4 = new HashMap<>();                map4.put("href", "/statistics/show.hml");                map4.put("message", "统计");                allFunction.add(map2);                allFunction.add(map3);                allFunction.add(map4);            }            session.setAttribute("allFunction", allFunction);            return "main";        }else{            // 没有这个用户, 更改提示信息,告诉错误            session.setAttribute("message","账号或者密码错误！");            // 错误回到login            return "login";        }    }    @RequestMapping(value ="/register.hml",method= RequestMethod.POST)    public String register(String username, String password1, String password2, Long identify_select, Long class_select, HttpSession session) {        if(!password1.equals(password2)){            session.setAttribute("message","请在注册时输入两次重复的密码！");            return "login";        }        boolean isValidUser = userservice.haveUser(username, password1, identify_select, class_select);//        boolean resultMap = Validator.fieldValidate(errorResult);        if(isValidUser){            session.setAttribute("message","该用户已注册！");            return "login";        }else{            if(userservice.UserRegister(username,password1,identify_select, class_select)){                session.setAttribute("message","注册成功！");                return "login";            }else{                session.setAttribute("message","注册失败！");                return "login";            }        }    }}